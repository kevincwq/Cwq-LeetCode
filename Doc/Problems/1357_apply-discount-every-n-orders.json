{"data":{"question":{"questionId":"1459","questionFrontendId":"1357","boundTopicId":null,"title":"Apply Discount Every n Orders","titleSlug":"apply-discount-every-n-orders","content":"<p>There is&nbsp;a sale in a supermarket, there will be a <code>discount</code> every <code>n</code> customer.<br />\r\nThere are some products in the supermarket where the id of the <code>i-th</code> product is <code>products[i]</code> and the price per unit of this product is&nbsp;<code>prices[i]</code>.<br />\r\nThe system will count the number of customers and when the <code>n-th</code> customer arrive he/she will have a <code>discount</code> on the bill. (i.e if the cost is <code>x</code> the new cost is <code>x - (discount * x) / 100</code>). Then the system will start counting customers again.<br />\r\nThe customer orders a certain amount of each product where <code>product[i]</code> is the id of the <code>i-th</code> product the customer ordered and <code>amount[i]</code> is the number of units the customer ordered of that product.</p>\r\n\r\n<p>Implement the <code>Cashier</code> class:</p>\r\n\r\n<ul>\r\n\t<li><code>Cashier(int n, int discount, int[] products, int[] prices)</code> Initializes the object with <code>n</code>, the <code>discount</code>, the <code>products</code>&nbsp;and their <code>prices</code>.</li>\r\n\t<li><code>double&nbsp;getBill(int[] product, int[] amount)</code>&nbsp;returns the value of the bill and apply the discount if needed. Answers within <code>10^-5</code> of the actual value will be accepted as correct.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input</strong>\r\n[&quot;Cashier&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;,&quot;getBill&quot;]\r\n[[3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]],[[1,2],[1,2]],[[3,7],[10,10]],[[1,2,3,4,5,6,7],[1,1,1,1,1,1,1]],[[4],[10]],[[7,3],[10,10]],[[7,5,3,1,6,4,2],[10,10,10,9,9,9,7]],[[2,3,5],[5,3,2]]]\r\n<strong>Output</strong>\r\n[null,500.0,4000.0,800.0,4000.0,4000.0,7350.0,2500.0]\r\n<strong>Explanation</strong>\r\nCashier cashier = new Cashier(3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]);\r\ncashier.getBill([1,2],[1,2]);                        // return 500.0, bill = 1 * 100 + 2 * 200 = 500.\r\ncashier.getBill([3,7],[10,10]);                      // return 4000.0\r\ncashier.getBill([1,2,3,4,5,6,7],[1,1,1,1,1,1,1]);    // return 800.0, The bill was 1600.0 but as this is the third customer, he has a discount of 50% which means his bill is only 1600 - 1600 * (50 / 100) = 800.\r\ncashier.getBill([4],[10]);                           // return 4000.0\r\ncashier.getBill([7,3],[10,10]);                      // return 4000.0\r\ncashier.getBill([7,5,3,1,6,4,2],[10,10,10,9,9,9,7]); // return 7350.0, Bill was 14700.0 but as the system counted three more customers, he will have a 50% discount and the bill becomes 7350.0\r\ncashier.getBill([2,3,5],[5,3,2]);                    // return 2500.0\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n &lt;= 10^4</code></li>\r\n\t<li><code>0 &lt;= discount &lt;= 100</code></li>\r\n\t<li><code>1 &lt;= products.length &lt;= 200</code></li>\r\n\t<li><code>1 &lt;= products[i] &lt;= 200</code></li>\r\n\t<li>There are <strong>not</strong> repeated elements in the array <code>products</code>.</li>\r\n\t<li><code>prices.length == products.length</code></li>\r\n\t<li><code>1 &lt;= prices[i] &lt;= 1000</code></li>\r\n\t<li><code>1 &lt;= product.length &lt;= products.length</code></li>\r\n\t<li><code>product[i]</code> exists in <code>products</code>.</li>\r\n\t<li><code>amount.length == product.length</code></li>\r\n\t<li><code>1 &lt;= amount[i] &lt;= 1000</code></li>\r\n\t<li>At most <code>1000</code> calls will be made to <code>getBill</code>.</li>\r\n\t<li>Answers within&nbsp;<code>10^-5</code>&nbsp;of the actual value will be accepted as correct.</li>\r\n</ul>","translatedTitle":null,"translatedContent":null,"isPaidOnly":false,"difficulty":"Medium","likes":63,"dislikes":79,"isLiked":null,"similarQuestions":"[]","contributors":[],"topicTags":[{"name":"Design","slug":"design","translatedName":null,"__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class Cashier {\npublic:\n    Cashier(int n, int discount, vector<int>& products, vector<int>& prices) {\n        \n    }\n    \n    double getBill(vector<int> product, vector<int> amount) {\n        \n    }\n};\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * Cashier* obj = new Cashier(n, discount, products, prices);\n * double param_1 = obj->getBill(product,amount);\n */","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class Cashier {\n\n    public Cashier(int n, int discount, int[] products, int[] prices) {\n        \n    }\n    \n    public double getBill(int[] product, int[] amount) {\n        \n    }\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * Cashier obj = new Cashier(n, discount, products, prices);\n * double param_1 = obj.getBill(product,amount);\n */","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class Cashier(object):\n\n    def __init__(self, n, discount, products, prices):\n        \"\"\"\n        :type n: int\n        :type discount: int\n        :type products: List[int]\n        :type prices: List[int]\n        \"\"\"\n        \n\n    def getBill(self, product, amount):\n        \"\"\"\n        :type product: List[int]\n        :type amount: List[int]\n        :rtype: float\n        \"\"\"\n        \n\n\n# Your Cashier object will be instantiated and called as such:\n# obj = Cashier(n, discount, products, prices)\n# param_1 = obj.getBill(product,amount)","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class Cashier:\n\n    def __init__(self, n: int, discount: int, products: List[int], prices: List[int]):\n        \n\n    def getBill(self, product: List[int], amount: List[int]) -> float:\n        \n\n\n# Your Cashier object will be instantiated and called as such:\n# obj = Cashier(n, discount, products, prices)\n# param_1 = obj.getBill(product,amount)","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\n\n\ntypedef struct {\n    \n} Cashier;\n\n\nCashier* cashierCreate(int n, int discount, int* products, int productsSize, int* prices, int pricesSize) {\n    \n}\n\ndouble cashierGetBill(Cashier* obj, int* product, int productSize, int* amount, int amountSize) {\n  \n}\n\nvoid cashierFree(Cashier* obj) {\n    \n}\n\n/**\n * Your Cashier struct will be instantiated and called as such:\n * Cashier* obj = cashierCreate(n, discount, products, productsSize, prices, pricesSize);\n * double param_1 = cashierGetBill(obj, product, productSize, amount, amountSize);\n \n * cashierFree(obj);\n*/","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class Cashier {\n\n    public Cashier(int n, int discount, int[] products, int[] prices) {\n        \n    }\n    \n    public double GetBill(int[] product, int[] amount) {\n        \n    }\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * Cashier obj = new Cashier(n, discount, products, prices);\n * double param_1 = obj.GetBill(product,amount);\n */","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number} n\n * @param {number} discount\n * @param {number[]} products\n * @param {number[]} prices\n */\nvar Cashier = function(n, discount, products, prices) {\n    \n};\n\n/** \n * @param {number[]} product \n * @param {number[]} amount\n * @return {number}\n */\nCashier.prototype.getBill = function(product, amount) {\n    \n};\n\n/** \n * Your Cashier object will be instantiated and called as such:\n * var obj = new Cashier(n, discount, products, prices)\n * var param_1 = obj.getBill(product,amount)\n */","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"class Cashier\n\n=begin\n    :type n: Integer\n    :type discount: Integer\n    :type products: Integer[]\n    :type prices: Integer[]\n=end\n    def initialize(n, discount, products, prices)\n        \n    end\n\n\n=begin\n    :type product: Integer[]\n    :type amount: Integer[]\n    :rtype: Float\n=end\n    def get_bill(product, amount)\n        \n    end\n\n\nend\n\n# Your Cashier object will be instantiated and called as such:\n# obj = Cashier.new(n, discount, products, prices)\n# param_1 = obj.get_bill(product, amount)","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"\nclass Cashier {\n\n    init(_ n: Int, _ discount: Int, _ products: [Int], _ prices: [Int]) {\n        \n    }\n    \n    func getBill(_ product: [Int], _ amount: [Int]) -> Double {\n        \n    }\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * let obj = Cashier(n, discount, products, prices)\n * let ret_1: Double = obj.getBill(product, amount)\n */","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"type Cashier struct {\n    \n}\n\n\nfunc Constructor(n int, discount int, products []int, prices []int) Cashier {\n    \n}\n\n\nfunc (this *Cashier) GetBill(product []int, amount []int) float64 {\n    \n}\n\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * obj := Constructor(n, discount, products, prices);\n * param_1 := obj.GetBill(product,amount);\n */","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"class Cashier(_n: Int, _discount: Int, _products: Array[Int], _prices: Array[Int]) {\n\n    def getBill(product: Array[Int], amount: Array[Int]): Double = {\n        \n    }\n\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * var obj = new Cashier(n, discount, products, prices)\n * var param_1 = obj.getBill(product,amount)\n */","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class Cashier(n: Int, discount: Int, products: IntArray, prices: IntArray) {\n\n    fun getBill(product: IntArray, amount: IntArray): Double {\n        \n    }\n\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * var obj = Cashier(n, discount, products, prices)\n * var param_1 = obj.getBill(product,amount)\n */","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"struct Cashier {\n\n}\n\n\n/** \n * `&self` means the method takes an immutable reference.\n * If you need a mutable reference, change it to `&mut self` instead.\n */\nimpl Cashier {\n\n    fn new(n: i32, discount: i32, products: Vec<i32>, prices: Vec<i32>) -> Self {\n        \n    }\n    \n    fn get_bill(&self, product: Vec<i32>, amount: Vec<i32>) -> f64 {\n        \n    }\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * let obj = Cashier::new(n, discount, products, prices);\n * let ret_1: f64 = obj.get_bill(product, amount);\n */","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class Cashier {\n    /**\n     * @param Integer $n\n     * @param Integer $discount\n     * @param Integer[] $products\n     * @param Integer[] $prices\n     */\n    function __construct($n, $discount, $products, $prices) {\n        \n    }\n  \n    /**\n     * @param Integer[] $product\n     * @param Integer[] $amount\n     * @return Float\n     */\n    function getBill($product, $amount) {\n        \n    }\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * $obj = Cashier($n, $discount, $products, $prices);\n * $ret_1 = $obj->getBill($product, $amount);\n */","__typename":"CodeSnippetNode"},{"lang":"TypeScript","langSlug":"typescript","code":"class Cashier {\n    constructor(n: number, discount: number, products: number[], prices: number[]) {\n\n    }\n\n    getBill(product: number[], amount: number[]): number {\n\n    }\n}\n\n/**\n * Your Cashier object will be instantiated and called as such:\n * var obj = new Cashier(n, discount, products, prices)\n * var param_1 = obj.getBill(product,amount)\n */","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"8.1K\", \"totalSubmission\": \"12.3K\", \"totalAcceptedRaw\": 8132, \"totalSubmissionRaw\": 12274, \"acRate\": \"66.3%\"}","hints":["Keep track of the count of the customers.","Check if the count of the customers is divisible by n then apply the discount formula."],"solution":null,"status":null,"sampleTestCase":"[\"Cashier\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\"]\r\n[[3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]],[[1,2],[1,2]],[[3,7],[10,10]],[[1,2,3,4,5,6,7],[1,1,1,1,1,1,1]],[[4],[10]],[[7,3],[10,10]],[[7,5,3,1,6,4,2],[10,10,10,9,9,9,7]],[[2,3,5],[5,3,2]]]\r","metaData":"{\n  \"classname\": \"Cashier\",\n  \"constructor\": {\n    \"params\": [\n      {\n        \"type\": \"integer\",\n        \"name\": \"n\"\n      },\n      {\n        \"name\": \"discount\",\n        \"type\": \"integer\"\n      },\n      {\n        \"name\": \"products\",\n        \"type\": \"integer[]\"\n      },\n      {\n        \"name\": \"prices\",\n        \"type\": \"integer[]\"\n      }\n    ]\n  },\n  \"methods\": [\n    {\n      \"params\": [\n        {\n          \"type\": \"integer[]\",\n          \"name\": \"product\"\n        },\n        {\n          \"type\": \"integer[]\",\n          \"name\": \"amount\"\n        }\n      ],\n      \"name\": \"getBill\",\n      \"return\": {\n        \"type\": \"double\"\n      }\n    }\n  ],\n  \"return\": {\n    \"type\": \"boolean\"\n  },\n  \"systemdesign\": true\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"enableDebugger":true,"envInfo":"{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 10 </code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>Java SE 13</code>.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 8.2</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8\\\" target=\\\"_blank\\\">C# 8.0 </a></p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 14.3.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use <a href=\\\"https://github.com/datastructures-js/priority-queue\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and <a href=\\\"https://github.com/datastructures-js/queue\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 2.7.1</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.2.5</code>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.13</code>.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.8</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 2.13</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.3.10</code>.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.40.0</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a>\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 7.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>Node.js 14.3.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"]}","libraryUrl":null,"adminUrl":null,"__typename":"QuestionNode"}}}
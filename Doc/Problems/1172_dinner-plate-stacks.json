{"data":{"question":{"questionId":"1270","questionFrontendId":"1172","boundTopicId":null,"title":"Dinner Plate Stacks","titleSlug":"dinner-plate-stacks","content":"<p>You have an infinite number of stacks arranged in a row and numbered (left to right) from 0, each of the stacks has the same&nbsp;maximum <code>capacity</code>.</p>\n\n<p>Implement the <code>DinnerPlates</code> class:</p>\n\n<ul>\n\t<li><code>DinnerPlates(int capacity)</code> Initializes the object with the maximum <code>capacity</code> of the stacks.</li>\n\t<li><code>void push(int val)</code>&nbsp;Pushes the given positive integer <code>val</code> into the leftmost stack with size less than <code>capacity</code>.</li>\n\t<li><code>int pop()</code>&nbsp;Returns the value at the top of the rightmost non-empty stack and removes it from that stack, and returns <code>-1</code> if all stacks are empty.</li>\n\t<li><code>int popAtStack(int index)</code>&nbsp;Returns the value at the top of the stack with the given <code>index</code> and removes it from that stack, and returns -1 if the stack with that&nbsp;given <code>index</code> is empty.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<b>Input: </b>\n[&quot;DinnerPlates&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;popAtStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;popAtStack&quot;,&quot;popAtStack&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;]\n[[2],[1],[2],[3],[4],[5],[0],[20],[21],[0],[2],[],[],[],[],[]]\n<b>Output: </b>\n[null,null,null,null,null,null,2,null,null,20,21,5,4,3,1,-1]\n\n<b>Explanation: </b>\nDinnerPlates D = DinnerPlates(2);  // Initialize with capacity = 2\nD.push(1);\nD.push(2);\nD.push(3);\nD.push(4);\nD.push(5);         // The stacks are now:  2 &nbsp;4\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.popAtStack(0);   // Returns 2.  The stacks are now:    &nbsp;4\n            &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                       \ufe48 \ufe48 \ufe48\nD.push(20);        // The stacks are now: 20  4\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.push(21);        // The stacks are now: 20  4 21\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.popAtStack(0);   // Returns 20.  The stacks are now:     4 21\n             &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                        \ufe48 \ufe48 \ufe48\nD.popAtStack(2);   // Returns 21.  The stacks are now:     4\n             &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                        \ufe48 \ufe48 \ufe48 \nD.pop()            // Returns 5.  The stacks are now:      4\n             &nbsp;                                          1 &nbsp;3 \n                                                        \ufe48 \ufe48  \nD.pop()            // Returns 4.  The stacks are now:   1 &nbsp;3 \n                                                        \ufe48 \ufe48   \nD.pop()            // Returns 3.  The stacks are now:   1 \n                                                        \ufe48   \nD.pop()            // Returns 1.  There are no stacks.\nD.pop()            // Returns -1.  There are still no stacks.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= capacity&nbsp;&lt;= 20000</code></li>\n\t<li><code>1 &lt;= val&nbsp;&lt;= 20000</code></li>\n\t<li><code>0 &lt;= index&nbsp;&lt;= 100000</code></li>\n\t<li>At most <code>200000</code>&nbsp;calls will be made to <code>push</code>, <code>pop</code>, and <code>popAtStack</code>.</li>\n</ul>\n","translatedTitle":null,"translatedContent":null,"isPaidOnly":false,"difficulty":"Hard","likes":187,"dislikes":21,"isLiked":null,"similarQuestions":"[]","contributors":[],"topicTags":[{"name":"Design","slug":"design","translatedName":null,"__typename":"TopicTagNode"}],"companyTagStats":null,"codeSnippets":[{"lang":"C++","langSlug":"cpp","code":"class DinnerPlates {\npublic:\n    DinnerPlates(int capacity) {\n        \n    }\n    \n    void push(int val) {\n        \n    }\n    \n    int pop() {\n        \n    }\n    \n    int popAtStack(int index) {\n        \n    }\n};\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * DinnerPlates* obj = new DinnerPlates(capacity);\n * obj->push(val);\n * int param_2 = obj->pop();\n * int param_3 = obj->popAtStack(index);\n */","__typename":"CodeSnippetNode"},{"lang":"Java","langSlug":"java","code":"class DinnerPlates {\n\n    public DinnerPlates(int capacity) {\n        \n    }\n    \n    public void push(int val) {\n        \n    }\n    \n    public int pop() {\n        \n    }\n    \n    public int popAtStack(int index) {\n        \n    }\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * DinnerPlates obj = new DinnerPlates(capacity);\n * obj.push(val);\n * int param_2 = obj.pop();\n * int param_3 = obj.popAtStack(index);\n */","__typename":"CodeSnippetNode"},{"lang":"Python","langSlug":"python","code":"class DinnerPlates(object):\n\n    def __init__(self, capacity):\n        \"\"\"\n        :type capacity: int\n        \"\"\"\n        \n\n    def push(self, val):\n        \"\"\"\n        :type val: int\n        :rtype: None\n        \"\"\"\n        \n\n    def pop(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        \n\n    def popAtStack(self, index):\n        \"\"\"\n        :type index: int\n        :rtype: int\n        \"\"\"\n        \n\n\n# Your DinnerPlates object will be instantiated and called as such:\n# obj = DinnerPlates(capacity)\n# obj.push(val)\n# param_2 = obj.pop()\n# param_3 = obj.popAtStack(index)","__typename":"CodeSnippetNode"},{"lang":"Python3","langSlug":"python3","code":"class DinnerPlates:\n\n    def __init__(self, capacity: int):\n        \n\n    def push(self, val: int) -> None:\n        \n\n    def pop(self) -> int:\n        \n\n    def popAtStack(self, index: int) -> int:\n        \n\n\n# Your DinnerPlates object will be instantiated and called as such:\n# obj = DinnerPlates(capacity)\n# obj.push(val)\n# param_2 = obj.pop()\n# param_3 = obj.popAtStack(index)","__typename":"CodeSnippetNode"},{"lang":"C","langSlug":"c","code":"\n\n\ntypedef struct {\n    \n} DinnerPlates;\n\n\nDinnerPlates* dinnerPlatesCreate(int capacity) {\n    \n}\n\nvoid dinnerPlatesPush(DinnerPlates* obj, int val) {\n  \n}\n\nint dinnerPlatesPop(DinnerPlates* obj) {\n  \n}\n\nint dinnerPlatesPopAtStack(DinnerPlates* obj, int index) {\n  \n}\n\nvoid dinnerPlatesFree(DinnerPlates* obj) {\n    \n}\n\n/**\n * Your DinnerPlates struct will be instantiated and called as such:\n * DinnerPlates* obj = dinnerPlatesCreate(capacity);\n * dinnerPlatesPush(obj, val);\n \n * int param_2 = dinnerPlatesPop(obj);\n \n * int param_3 = dinnerPlatesPopAtStack(obj, index);\n \n * dinnerPlatesFree(obj);\n*/","__typename":"CodeSnippetNode"},{"lang":"C#","langSlug":"csharp","code":"public class DinnerPlates {\n\n    public DinnerPlates(int capacity) {\n        \n    }\n    \n    public void Push(int val) {\n        \n    }\n    \n    public int Pop() {\n        \n    }\n    \n    public int PopAtStack(int index) {\n        \n    }\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * DinnerPlates obj = new DinnerPlates(capacity);\n * obj.Push(val);\n * int param_2 = obj.Pop();\n * int param_3 = obj.PopAtStack(index);\n */","__typename":"CodeSnippetNode"},{"lang":"JavaScript","langSlug":"javascript","code":"/**\n * @param {number} capacity\n */\nvar DinnerPlates = function(capacity) {\n    \n};\n\n/** \n * @param {number} val\n * @return {void}\n */\nDinnerPlates.prototype.push = function(val) {\n    \n};\n\n/**\n * @return {number}\n */\nDinnerPlates.prototype.pop = function() {\n    \n};\n\n/** \n * @param {number} index\n * @return {number}\n */\nDinnerPlates.prototype.popAtStack = function(index) {\n    \n};\n\n/** \n * Your DinnerPlates object will be instantiated and called as such:\n * var obj = new DinnerPlates(capacity)\n * obj.push(val)\n * var param_2 = obj.pop()\n * var param_3 = obj.popAtStack(index)\n */","__typename":"CodeSnippetNode"},{"lang":"Ruby","langSlug":"ruby","code":"class DinnerPlates\n\n=begin\n    :type capacity: Integer\n=end\n    def initialize(capacity)\n        \n    end\n\n\n=begin\n    :type val: Integer\n    :rtype: Void\n=end\n    def push(val)\n        \n    end\n\n\n=begin\n    :rtype: Integer\n=end\n    def pop()\n        \n    end\n\n\n=begin\n    :type index: Integer\n    :rtype: Integer\n=end\n    def pop_at_stack(index)\n        \n    end\n\n\nend\n\n# Your DinnerPlates object will be instantiated and called as such:\n# obj = DinnerPlates.new(capacity)\n# obj.push(val)\n# param_2 = obj.pop()\n# param_3 = obj.pop_at_stack(index)","__typename":"CodeSnippetNode"},{"lang":"Swift","langSlug":"swift","code":"\nclass DinnerPlates {\n\n    init(_ capacity: Int) {\n        \n    }\n    \n    func push(_ val: Int) {\n        \n    }\n    \n    func pop() -> Int {\n        \n    }\n    \n    func popAtStack(_ index: Int) -> Int {\n        \n    }\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * let obj = DinnerPlates(capacity)\n * obj.push(val)\n * let ret_2: Int = obj.pop()\n * let ret_3: Int = obj.popAtStack(index)\n */","__typename":"CodeSnippetNode"},{"lang":"Go","langSlug":"golang","code":"type DinnerPlates struct {\n    \n}\n\n\nfunc Constructor(capacity int) DinnerPlates {\n    \n}\n\n\nfunc (this *DinnerPlates) Push(val int)  {\n    \n}\n\n\nfunc (this *DinnerPlates) Pop() int {\n    \n}\n\n\nfunc (this *DinnerPlates) PopAtStack(index int) int {\n    \n}\n\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * obj := Constructor(capacity);\n * obj.Push(val);\n * param_2 := obj.Pop();\n * param_3 := obj.PopAtStack(index);\n */","__typename":"CodeSnippetNode"},{"lang":"Scala","langSlug":"scala","code":"class DinnerPlates(_capacity: Int) {\n\n    def push(`val`: Int) {\n        \n    }\n\n    def pop(): Int = {\n        \n    }\n\n    def popAtStack(index: Int): Int = {\n        \n    }\n\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * var obj = new DinnerPlates(capacity)\n * obj.push(`val`)\n * var param_2 = obj.pop()\n * var param_3 = obj.popAtStack(index)\n */","__typename":"CodeSnippetNode"},{"lang":"Kotlin","langSlug":"kotlin","code":"class DinnerPlates(capacity: Int) {\n\n    fun push(`val`: Int) {\n        \n    }\n\n    fun pop(): Int {\n        \n    }\n\n    fun popAtStack(index: Int): Int {\n        \n    }\n\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * var obj = DinnerPlates(capacity)\n * obj.push(`val`)\n * var param_2 = obj.pop()\n * var param_3 = obj.popAtStack(index)\n */","__typename":"CodeSnippetNode"},{"lang":"Rust","langSlug":"rust","code":"struct DinnerPlates {\n\n}\n\n\n/** \n * `&self` means the method takes an immutable reference.\n * If you need a mutable reference, change it to `&mut self` instead.\n */\nimpl DinnerPlates {\n\n    fn new(capacity: i32) -> Self {\n        \n    }\n    \n    fn push(&self, val: i32) {\n        \n    }\n    \n    fn pop(&self) -> i32 {\n        \n    }\n    \n    fn pop_at_stack(&self, index: i32) -> i32 {\n        \n    }\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * let obj = DinnerPlates::new(capacity);\n * obj.push(val);\n * let ret_2: i32 = obj.pop();\n * let ret_3: i32 = obj.pop_at_stack(index);\n */","__typename":"CodeSnippetNode"},{"lang":"PHP","langSlug":"php","code":"class DinnerPlates {\n    /**\n     * @param Integer $capacity\n     */\n    function __construct($capacity) {\n        \n    }\n  \n    /**\n     * @param Integer $val\n     * @return NULL\n     */\n    function push($val) {\n        \n    }\n  \n    /**\n     * @return Integer\n     */\n    function pop() {\n        \n    }\n  \n    /**\n     * @param Integer $index\n     * @return Integer\n     */\n    function popAtStack($index) {\n        \n    }\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * $obj = DinnerPlates($capacity);\n * $obj->push($val);\n * $ret_2 = $obj->pop();\n * $ret_3 = $obj->popAtStack($index);\n */","__typename":"CodeSnippetNode"},{"lang":"TypeScript","langSlug":"typescript","code":"class DinnerPlates {\n    constructor(capacity: number) {\n\n    }\n\n    push(val: number): void {\n\n    }\n\n    pop(): number {\n\n    }\n\n    popAtStack(index: number): number {\n\n    }\n}\n\n/**\n * Your DinnerPlates object will be instantiated and called as such:\n * var obj = new DinnerPlates(capacity)\n * obj.push(val)\n * var param_2 = obj.pop()\n * var param_3 = obj.popAtStack(index)\n */","__typename":"CodeSnippetNode"}],"stats":"{\"totalAccepted\": \"8.8K\", \"totalSubmission\": \"23.3K\", \"totalAcceptedRaw\": 8836, \"totalSubmissionRaw\": 23294, \"acRate\": \"37.9%\"}","hints":["Use a data structure to save the plate status. You may need to operate the exact index. Maintain the leftmost vacant stack and the rightmost non-empty stack.","Use a list of stack to store the plate status. Use heap to maintain the leftmost and rightmost valid stack."],"solution":null,"status":null,"sampleTestCase":"[\"DinnerPlates\",\"push\",\"push\",\"push\",\"push\",\"push\",\"popAtStack\",\"push\",\"push\",\"popAtStack\",\"popAtStack\",\"pop\",\"pop\",\"pop\",\"pop\",\"pop\"]\n[[2],[1],[2],[3],[4],[5],[0],[20],[21],[0],[2],[],[],[],[],[]]","metaData":"{\n  \"classname\": \"DinnerPlates\",\n  \"constructor\": {\n    \"params\": [\n      {\n        \"type\": \"integer\",\n        \"name\": \"capacity\"\n      }\n    ]\n  },\n  \"methods\": [\n    {\n      \"params\": [\n        {\n          \"type\": \"integer\",\n          \"name\": \"val\"\n        }\n      ],\n      \"name\": \"push\",\n      \"return\": {\n        \"type\": \"void\"\n      }\n    },\n    {\n      \"params\": [],\n      \"name\": \"pop\",\n      \"return\": {\n        \"type\": \"integer\"\n      }\n    },\n    {\n      \"params\": [\n        {\n          \"type\": \"integer\",\n          \"name\": \"index\"\n        }\n      ],\n      \"return\": {\n        \"type\": \"integer\"\n      },\n      \"name\": \"popAtStack\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"boolean\"\n  },\n  \"systemdesign\": true\n}","judgerAvailable":true,"judgeType":"large","mysqlSchemas":[],"enableRunCode":true,"enableTestMode":false,"enableDebugger":true,"envInfo":"{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 10 </code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code>Java SE 13</code>.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 8.2</code> using the gnu99 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-8\\\" target=\\\"_blank\\\">C# 8.0 </a></p>\\r\\n\\r\\n<p>Your code is compiled with debug flag enabled (<code>/debug</code>).</p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 14.3.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use <a href=\\\"https://github.com/datastructures-js/priority-queue\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and <a href=\\\"https://github.com/datastructures-js/queue\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 2.7.1</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.2.5</code>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.13</code>.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.8</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 2.13</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.3.10</code>.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.40.0</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand</a>\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 7.2</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>Node.js 14.3.0</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"]}","libraryUrl":null,"adminUrl":null,"__typename":"QuestionNode"}}}